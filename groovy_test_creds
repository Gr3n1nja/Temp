pipeline {
  agent none
  stages {
    stage('Use Credentials') {
      steps {
        script {
          // Define an array to hold credential details
          def credentialsDetails = []

          // Fetch and store credentials
          withCredentials([usernamePassword(credentialsId: 'my-cred-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            // Append credential details to the array
            credentialsDetails << [username: env.USERNAME, password: 'Password is secure and not printed']

            // Print each item in the credentialsDetails array
            credentialsDetails.each {
              echo "Username: ${it.username}"
              echo "Password: ${it.password}"  // Note: Demonstrative purposes only, do not print sensitive data
            }
          }
        }
      }
    }
  }
}

----------------------------------------

pipeline {
  agent none
  stages {
    stage('Use Credentials') {
      steps {
        script {
          // Initialize the array within the script block
          def credentialsDetails = []
          
          // Using credentials
          withCredentials([usernamePassword(credentialsId: 'my-cred-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            credentialsDetails.add([username: env.USERNAME, password: 'Secure']) // Collecting data
            
            // Iterating over the array to print details
            for (cred in credentialsDetails) {
              echo "Username: ${cred['username']}, Password: ${cred['password']}"
            }
          }
        }
      }
    }
  }
}


-----------------------------------------------
pipeline {
  agent none
  stages {
    stage('Use Credentials') {
      steps {
        script {
          // Using credentials
          withCredentials([usernamePassword(credentialsId: 'my-cred-id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            // Iterate over each character of the password and print it
            env.PASSWORD.each { char ->
              echo "${char}"
            }
          }
        }
      }
    }
  }
}


